{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "description": "The name of the service instance",
          "type": "string",
          "default": "mongo-replicaset",
          "title": "Service name",
          "minLength": 3
        },
        "replicaset_name": {
          "description": "The replicaset name .",
          "type": "string",
          "default": "mesosreplset",
          "title": "replicaset_name"
        },
        "mongo_user": {
          "description": "The user that login to mongo.",
          "type": "string",
          "default": "",
          "title": "User"
        },
        "mongo_password": {
          "description": "password of mongo user .",
          "type": "string",
          "default": "",
          "title": "password"
        },
        "key": {
          "description": "The key to be used for intra-node replica set communication. The key must be 1024 characters long. We strongly recommend a new key is generated by running 'openssl rand -base64 756'",
          "type": "string",
          "default": "",
          "title": "key",
          "minLength": 1023,
          "maxLength": 1024
        },
        "user": {
          "description": "The user that the service will run as.",
          "type": "string",
          "default": "root",
          "title": "User"
        },
        "service_account": {
          "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
          "type": "string",
          "default": ""
        },
        "service_account_secret": {
          "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
          "type": "string",
          "default": "",
          "title": "Credential secret name (optional)"
        },
        "virtual_network_enabled": {
          "description": "Enable virtual networking",
          "type": "boolean",
          "default": true
        },
        "virtual_network_name": {
          "description": "The name of the virtual network to join",
          "type": "string",
          "default": "dcos"
        },
        "virtual_network_plugin_labels": {
          "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
          "type": "string",
          "default": ""
        },
        "log_level": {
          "description": "The log level for the DC/OS service.",
          "type": "string",
          "enum": [
            "OFF",
            "FATAL",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL"
          ],
          "default": "INFO"
        }
      },
      "required": [
        "name",
        "user",
        "replicaset_name",
        "mongo_user",
        "mongo_password",
        "key"
      ]
    },
    "node": {
      "description": "mongo pod configuration properties",
      "type": "object",
      "properties": {
        "placement_constraint": {
          "title": "Placement constraint",
          "description": "Placement constraints for nodes. Example: [[\"hostname\", \"UNIQUE\"]]",
          "type": "string",
          "default": "[[\"hostname\", \"UNIQUE\"]]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "cpus": {
          "title": "CPU count",
          "description": "mongo pod CPU requirements",
          "type": "number",
          "default": 1
        },
        "mem": {
          "title": "Memory size (MB)",
          "description": "mongo pod mem requirements (in MB)",
          "type": "integer",
          "minLength": 1023,
          "default": 1024
        },
        "disk": {
          "title": "Disk size (MB)",
          "description": "mongo pod persistent disk requirements (in MB)",
          "type": "integer",
          "default": 1024
        },
        "disk_type": {
          "title": "Disk type [ROOT, MOUNT]",
          "description": "Mount volumes require preconfiguration in DC/OS",
          "enum": [
            "ROOT",
            "MOUNT"
          ],
          "default": "ROOT"
        },
        "port": {
          "title": "MongoDB port",
          "description": "The port mongo is listening",
          "type": "integer",
          "default": 27017
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "disk_type"
      ]
    },
    "backup-restore": {
      "description": "Backup and Restore configuration properties. Only mongodump-based backup and AWS S3 (for backup storage) is supported currently",
      "type": "object",
      "properties": {
        "backup_cpus": {
          "title": "Backup/restore node cpus",
          "description": "Node cpu requirements for backup and restore process",
          "type": "number",
          "default": 1
        },
        "backup_mem": {
          "title": "Backup/restore node mem",
          "description": "Node mem requirements for backup and restore process, in megabytes",
          "type": "integer",
          "default": 1024
        },
        "disk": {
          "title": "Backup/restore Disk size (MB)",
          "description": "mongo pod persistent disk requirements (in MB)",
          "type": "integer",
          "default": 1024
        },
        "disk_type": {
          "title": "Backup/restore Disk type [ROOT, MOUNT]",
          "description": "Mount volumes require preconfiguration in DC/OS",
          "enum": [
            "MOUNT",
            "ROOT"
          ],
          "default": "MOUNT"
        },
        "s3": {
          "title": "AWS S3 configuration",
          "description": "Backup and Restore Amazon Web Services S3 configuration properties",
          "type": "object",
          "properties": {
            "region": {
              "title": "region",
              "description": "Backup and restore s3 region for upload",
              "type": "string",
              "default": "us-east-1",
              "enum": [
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-south-1",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2"
              ]
            },
            "accessKey": {
              "title": "access_key",
              "description": "Backup and restore s3 access key",
              "type": "string",
              "default": ""
            },
            "secretKey": {
              "title": "secret_key",
              "description": "Backup and restore s3 secret key",
              "type": "string",
              "default": ""
            }
          },
          "allOf": [
            {
              "properties": {
                "accessKey": {
                  "maxLength": 20
                }
              }
            },
            {
              "properties": {
                "secretKey": {
                  "maxLength": 40
                }
              }
            },
            {
              "required": [
                "region"
              ]
            }
          ]
        },
        "restore": {
          "title": "Restore",
          "description": "Restore configuration properties",
          "type": "object",
          "properties": {
            "s3Url": {
              "description": "AWS S3 URL to mongodump backup directory in 's3://<bucket-name>/<path>/' format. A URL for the backup is required for restore!",
              "type": "string",
              "default": ""
            },
            "restoreAfterInit": {
              "description": "Restore replica set from backup after initiation",
              "type": "boolean",
              "default": false
            },
            "gzip": {
              "description": "Enable gzip on restore. Backup data must be gzip compressed",
              "type": "boolean",
              "default": true
            },
            "dropCollections": {
              "description": "Drop collections during restore. This is usually required to avoid duplicate key errors on restore",
              "type": "boolean",
              "default": true
            },
            "oplogReplay": {
              "description": "Replay the backup oplog after restoring the collections, strongly recommended!",
              "type": "boolean",
              "default": true
            },
            "numParallelCollections": {
              "description": "Number of collections to restore in parallel",
              "type": "integer",
              "default": 4
            }
          },
          "allOf": [
            {
              "not": {
                "properties": {
                  "s3Url": {
                    "enum": [
                      ""
                    ]
                  },
                  "restoreAfterInit": {
                    "enum": [
                      true
                    ]
                  }
                }
              }
            },
            {
              "required": [
                "restoreAfterInit",
                "gzip",
                "dropCollections",
                "oplogReplay",
                "numParallelCollections"
              ]
            }
          ]
        },
        "backup": {
          "title": "Backup",
          "description": "Backup configuration properties",
          "type": "object",
          "properties": {
            "upload": {
              "description": "Backup upload configuration properties",
              "type": "object",
              "properties": {
                "s3bucketName": {
                  "title": "bucket_name",
                  "description": "Backup upload s3 bucket name",
                  "type": "string",
                  "default": ""
                },
                "s3bucketPrefix": {
                  "title": "bucket_prefix",
                  "description": "Backup upload s3 bucket key prefix",
                  "type": "string",
                  "default": "/"
                },
                "threads": {
                  "title": "upload.threads",
                  "description": "Upload thread count",
                  "type": "integer",
                  "default": 4
                },
                "retries": {
                  "title": "upload.retries",
                  "description": "Upload chunk retry count",
                  "type": "integer",
                  "default": 5
                },
                "s3chunkSizeMb": {
                  "title": "chunk_size_mb",
                  "description": "Backup and restore s3 chunk size in megabytes",
                  "type": "integer",
                  "default": 50,
                  "minimum": 1
                }
              },
              "required": [
                "s3bucketPrefix",
                "threads",
                "retries",
                "s3chunkSizeMb"
              ]
            }
          },
          "required": [
            "upload"
          ]
        },
        "hiddenSecondary": {
          "title": "Backup Hidden Secondary Node",
          "description": "MongoDB Hidden-secondary backup node configuration properties. A Hidden-secondary node is recommended for low impact backups as it does not receive application traffic and cannot win a failover-election",
          "type": "object",
          "properties": {
            "cpus": {
              "title": "Dedicated MongoDB backup node cpus",
              "description": "MongoDB backup hidden-secondary node cpu requirements",
              "type": "number",
              "default": 1
            },
            "mem": {
              "title": "Dedicated MongoDB backup node mem",
              "description": "MongoDB backup hidden-secondary node mem requirements, in megabytes",
              "type": "integer",
              "default": 1024
            }
          },
          "required": [
            "cpus",
            "mem"
          ]
        }
      }
    }
  }
}

{
  "packagingVersion": "4.0",
  "upgradesFrom": [
    "3.2-0.2"
  ],
  "downgradesTo": [
    "3.2-0.2"
  ],
  "minDcosReleaseVersion": "1.13",
  "name": "mongo-replicaset",
  "version": "0.2.10-4.0.12",
  "maintainer": "support@mongo-replicaset.COM",
  "description": "mongo-replicaset on DC/OS",
  "selected": false,
  "framework": true,
  "tags": [
    "nosql",
    "document",
    "mongo"
  ],
  "postInstallNotes": "DC/OS mongo-replicaset is being installed!\n\n\tDocumentation: https://docs.mesosphere.com/service-docs/mongodb/\n\tIssues: https://docs.mesosphere.com/support/",
  "postUninstallNotes": "DC/OS mongo-replicaset is being uninstalled.",
  "releaseVersion": 0,
  "config": {
    "type": "object",
    "properties": {
      "service": {
        "type": "object",
        "description": "DC/OS service configuration properties",
        "properties": {
          "name": {
            "description": "The name of the service instance",
            "type": "string",
            "default": "mongo-replicaset",
            "title": "Service name",
            "minLength": 3
          },
          "replicaset_name": {
            "description": "The replicaset name .",
            "type": "string",
            "default": "mesosreplset",
            "title": "replicaset_name"
          },
          "mongo_user": {
            "description": "The user that login to mongo.",
            "type": "string",
            "default": "",
            "title": "User"
          },
          "mongo_password": {
            "description": "password of mongo user .",
            "type": "string",
            "default": "",
            "title": "password"
          },
          "key": {
            "description": "The key to be used for intra-node replica set communication. The key must be 1024 characters long. We strongly recommend a new key is generated by running 'openssl rand -base64 756'",
            "type": "string",
            "default": "",
            "title": "key",
            "minLength": 1023,
            "maxLength": 1024
          },
          "user": {
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root",
            "title": "User"
          },
          "service_account": {
            "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
            "type": "string",
            "default": ""
          },
          "service_account_secret": {
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string",
            "default": "",
            "title": "Credential secret name (optional)"
          },
          "virtual_network_enabled": {
            "description": "Enable virtual networking",
            "type": "boolean",
            "default": true
          },
          "virtual_network_name": {
            "description": "The name of the virtual network to join",
            "type": "string",
            "default": "dcos"
          },
          "virtual_network_plugin_labels": {
            "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
            "type": "string",
            "default": ""
          },
          "log_level": {
            "description": "The log level for the DC/OS service.",
            "type": "string",
            "enum": [
              "OFF",
              "FATAL",
              "ERROR",
              "WARN",
              "INFO",
              "DEBUG",
              "TRACE",
              "ALL"
            ],
            "default": "INFO"
          }
        },
        "required": [
          "name",
          "user",
          "replicaset_name",
          "mongo_user",
          "mongo_password",
          "key"
        ]
      },
      "node": {
        "description": "mongo pod configuration properties",
        "type": "object",
        "properties": {
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Placement constraints for nodes. Example: [[\"hostname\", \"UNIQUE\"]]",
            "type": "string",
            "default": "[[\"hostname\", \"UNIQUE\"]]",
            "media": {
              "type": "application/x-zone-constraints+json"
            }
          },
          "cpus": {
            "title": "CPU count",
            "description": "mongo pod CPU requirements",
            "type": "number",
            "default": 1
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "mongo pod mem requirements (in MB)",
            "type": "integer",
            "minLength": 1023,
            "default": 1024
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "mongo pod persistent disk requirements (in MB)",
            "type": "integer",
            "default": 1024
          },
          "disk_type": {
            "title": "Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "ROOT",
              "MOUNT"
            ],
            "default": "ROOT"
          },
          "port": {
            "title": "MongoDB port",
            "description": "The port mongo is listening",
            "type": "integer",
            "default": 27017
          }
        },
        "required": [
          "cpus",
          "mem",
          "disk",
          "disk_type"
        ]
      },
      "backup-restore": {
        "description": "Backup and Restore configuration properties. Only mongodump-based backup and AWS S3 (for backup storage) is supported currently",
        "type": "object",
        "properties": {
          "backup_cpus": {
            "title": "Backup/restore node cpus",
            "description": "Node cpu requirements for backup and restore process",
            "type": "number",
            "default": 1
          },
          "backup_mem": {
            "title": "Backup/restore node mem",
            "description": "Node mem requirements for backup and restore process, in megabytes",
            "type": "integer",
            "default": 1024
          },
          "disk": {
            "title": "Backup/restore Disk size (MB)",
            "description": "mongo pod persistent disk requirements (in MB)",
            "type": "integer",
            "default": 1024
          },
          "disk_type": {
            "title": "Backup/restore Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "MOUNT",
              "ROOT"
            ],
            "default": "MOUNT"
          },
          "s3": {
            "title": "AWS S3 configuration",
            "description": "Backup and Restore Amazon Web Services S3 configuration properties",
            "type": "object",
            "properties": {
              "region": {
                "title": "region",
                "description": "Backup and restore s3 region for upload",
                "type": "string",
                "default": "us-east-1",
                "enum": [
                  "ap-northeast-1",
                  "ap-northeast-2",
                  "ap-northeast-3",
                  "ap-south-1",
                  "ap-southeast-1",
                  "ap-southeast-2",
                  "ca-central-1",
                  "cn-north-1",
                  "cn-northwest-1",
                  "eu-central-1",
                  "eu-west-1",
                  "eu-west-2",
                  "eu-west-3",
                  "sa-east-1",
                  "us-east-1",
                  "us-east-2",
                  "us-west-1",
                  "us-west-2"
                ]
              },
              "accessKey": {
                "title": "access_key",
                "description": "Backup and restore s3 access key",
                "type": "string",
                "default": ""
              },
              "secretKey": {
                "title": "secret_key",
                "description": "Backup and restore s3 secret key",
                "type": "string",
                "default": ""
              }
            },
            "allOf": [
              {
                "properties": {
                  "accessKey": {
                    "maxLength": 20
                  }
                }
              },
              {
                "properties": {
                  "secretKey": {
                    "maxLength": 40
                  }
                }
              },
              {
                "required": [
                  "region"
                ]
              }
            ]
          },
          "restore": {
            "title": "Restore",
            "description": "Restore configuration properties",
            "type": "object",
            "properties": {
              "s3Url": {
                "description": "AWS S3 URL to mongodump backup directory in 's3://<bucket-name>/<path>/' format. A URL for the backup is required for restore!",
                "type": "string",
                "default": ""
              },
              "restoreAfterInit": {
                "description": "Restore replica set from backup after initiation",
                "type": "boolean",
                "default": false
              },
              "gzip": {
                "description": "Enable gzip on restore. Backup data must be gzip compressed",
                "type": "boolean",
                "default": true
              },
              "dropCollections": {
                "description": "Drop collections during restore. This is usually required to avoid duplicate key errors on restore",
                "type": "boolean",
                "default": true
              },
              "oplogReplay": {
                "description": "Replay the backup oplog after restoring the collections, strongly recommended!",
                "type": "boolean",
                "default": true
              },
              "numParallelCollections": {
                "description": "Number of collections to restore in parallel",
                "type": "integer",
                "default": 4
              }
            },
            "allOf": [
              {
                "not": {
                  "properties": {
                    "s3Url": {
                      "enum": [
                        ""
                      ]
                    },
                    "restoreAfterInit": {
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              },
              {
                "required": [
                  "restoreAfterInit",
                  "gzip",
                  "dropCollections",
                  "oplogReplay",
                  "numParallelCollections"
                ]
              }
            ]
          },
          "backup": {
            "title": "Backup",
            "description": "Backup configuration properties",
            "type": "object",
            "properties": {
              "upload": {
                "description": "Backup upload configuration properties",
                "type": "object",
                "properties": {
                  "s3bucketName": {
                    "title": "bucket_name",
                    "description": "Backup upload s3 bucket name",
                    "type": "string",
                    "default": ""
                  },
                  "s3bucketPrefix": {
                    "title": "bucket_prefix",
                    "description": "Backup upload s3 bucket key prefix",
                    "type": "string",
                    "default": "/"
                  },
                  "threads": {
                    "title": "upload.threads",
                    "description": "Upload thread count",
                    "type": "integer",
                    "default": 4
                  },
                  "retries": {
                    "title": "upload.retries",
                    "description": "Upload chunk retry count",
                    "type": "integer",
                    "default": 5
                  },
                  "s3chunkSizeMb": {
                    "title": "chunk_size_mb",
                    "description": "Backup and restore s3 chunk size in megabytes",
                    "type": "integer",
                    "default": 50,
                    "minimum": 1
                  }
                },
                "required": [
                  "s3bucketPrefix",
                  "threads",
                  "retries",
                  "s3chunkSizeMb"
                ]
              }
            },
            "required": [
              "upload"
            ]
          },
          "hiddenSecondary": {
            "title": "Backup Hidden Secondary Node",
            "description": "MongoDB Hidden-secondary backup node configuration properties. A Hidden-secondary node is recommended for low impact backups as it does not receive application traffic and cannot win a failover-election",
            "type": "object",
            "properties": {
              "cpus": {
                "title": "Dedicated MongoDB backup node cpus",
                "description": "MongoDB backup hidden-secondary node cpu requirements",
                "type": "number",
                "default": 1
              },
              "mem": {
                "title": "Dedicated MongoDB backup node mem",
                "description": "MongoDB backup hidden-secondary node mem requirements, in megabytes",
                "type": "integer",
                "default": 1024
              }
            },
            "required": [
              "cpus",
              "mem"
            ]
          }
        }
      }
    }
  },
  "marathon": {
    "v2AppMustacheTemplate": "CnsKICAiaWQiOiAie3tzZXJ2aWNlLm5hbWV9fSIsCiAgImNwdXMiOiAxLAogICJtZW0iOiAxMDI0LAogICJpbnN0YW5jZXMiOiAxLAogICJ1c2VyIjogInt7c2VydmljZS51c2VyfX0iLAogICJjbWQiOiAiZXhwb3J0IExEX0xJQlJBUllfUEFUSD0kTUVTT1NfU0FOREJPWC9saWJtZXNvcy1idW5kbGUvbGliOiRMRF9MSUJSQVJZX1BBVEg7IGV4cG9ydCBNRVNPU19OQVRJVkVfSkFWQV9MSUJSQVJZPSQobHMgJE1FU09TX1NBTkRCT1gvbGlibWVzb3MtYnVuZGxlL2xpYi9saWJtZXNvcy0qLnNvKTsgZXhwb3J0IEpBVkFfSE9NRT0kKGxzIC1kICRNRVNPU19TQU5EQk9YL2pkayovKTsgZXhwb3J0IEpBVkFfSE9NRT0ke0pBVkFfSE9NRSUlL307IGV4cG9ydCBQQVRIPSQobHMgLWQgJEpBVkFfSE9NRS9iaW4pOiRQQVRIICYmIGV4cG9ydCBKQVZBX09QVFM9XCItWG1zMjU2TSAtWG14NTEyTSAtWFg6LUhlYXBEdW1wT25PdXRPZk1lbW9yeUVycm9yXCIgJiYgLi9ib290c3RyYXAgLXJlc29sdmU9ZmFsc2UgLXRlbXBsYXRlPWZhbHNlICYmIC4vb3BlcmF0b3Itc2NoZWR1bGVyL2Jpbi9tb25nb2RiIC4vb3BlcmF0b3Itc2NoZWR1bGVyL3N2Yy55bWwiLAogICJsYWJlbHMiOiB7CiAgICAiRENPU19DT01NT05TX0FQSV9WRVJTSU9OIjogInYxIiwKICAgICJEQ09TX0NPTU1PTlNfVU5JTlNUQUxMIjogInRydWUiLAogICAgIkRDT1NfUEFDS0FHRV9GUkFNRVdPUktfTkFNRSI6ICJ7e3NlcnZpY2UubmFtZX19IiwKICAgICJNQVJBVEhPTl9TSU5HTEVfSU5TVEFOQ0VfQVBQIjogInRydWUiLAogICAgIkRDT1NfU0VSVklDRV9OQU1FIjogInt7c2VydmljZS5uYW1lfX0iLAogICAgIkRDT1NfU0VSVklDRV9QT1JUX0lOREVYIjogIjAiLAogICAgIkRDT1NfU0VSVklDRV9TQ0hFTUUiOiAiaHR0cCIKICB9LAogIHt7I3NlcnZpY2Uuc2VydmljZV9hY2NvdW50X3NlY3JldH19CiAgInNlY3JldHMiOiB7CiAgICAic291cmNlIjogInt7c2VydmljZS5zZXJ2aWNlX2FjY291bnRfc2VjcmV0fX0iCiAgfSwKICB7ey9zZXJ2aWNlLnNlcnZpY2VfYWNjb3VudF9zZWNyZXR9fQogICJlbnYiOiB7CiAgICAiUEFDS0FHRV9OQU1FIjogIm1vbmdvZGIiLAogICAgIlBBQ0tBR0VfVkVSU0lPTiI6ICJzdHViLXVuaXZlcnNlIiwKICAgICJQQUNLQUdFX0JVSUxEX1RJTUVfRVBPQ0hfTVMiOiAiMTUxNTQzOTAwMjQ5NyIsCiAgICAiUEFDS0FHRV9CVUlMRF9USU1FX1NUUiI6ICJNb24gSmFuIDA4IDIwMTggMTk6MTY6NDIgKzAwMDAiLAogICAgIkZSQU1FV09SS19OQU1FIjogInt7c2VydmljZS5uYW1lfX0iLAogICAgIkZSQU1FV09SS19VU0VSIjogInt7c2VydmljZS51c2VyfX0iLAogICAgIkZSQU1FV09SS19QUklOQ0lQQUwiOiAie3tzZXJ2aWNlLnNlcnZpY2VfYWNjb3VudH19IiwKICAgICJGUkFNRVdPUktfTE9HX0xFVkVMIjogInt7c2VydmljZS5sb2dfbGV2ZWx9fSIsCiAgICAiTUVTT1NfQVBJX1ZFUlNJT04iOiAiVjEiLAogICAgIk1PTkdPX1JFUExJQ0FTRVRfTkFNRSI6Int7c2VydmljZS5yZXBsaWNhc2V0X25hbWV9fSIsCiAgICAiTU9OR09fVVNFUiI6ICJ7e3NlcnZpY2UubW9uZ29fdXNlcn19IiwKICAgICJNT05HT19QQVNTV09SRCI6ICJ7e3NlcnZpY2UubW9uZ29fcGFzc3dvcmR9fSIsCiAgICAiTU9OR09fS0VZIjogInt7c2VydmljZS5rZXl9fSIsCiAgICAiTU9OR09fSU1BR0UiOiAie3tyZXNvdXJjZS5hc3NldHMuY29udGFpbmVyLmRvY2tlci5tb25nby1pbWFnZX19IiwKICAgICJNRVNPU19BUElfVkVSU0lPTiI6ICJWMSIsCiAgICAiUkVQTFNFVF9OVU0iOiAiMyIsCiAgICAiTk9ERV9QTEFDRU1FTlQiOiAie3t7bm9kZS5wbGFjZW1lbnRfY29uc3RyYWludH19fSIsCiAgICB7eyNzZXJ2aWNlLnZpcnR1YWxfbmV0d29ya19lbmFibGVkfX0KICAgICJFTkFCTEVfVklSVFVBTF9ORVRXT1JLIjogInllcyIsCiAgICAiVklSVFVBTF9ORVRXT1JLX05BTUUiOiAie3tzZXJ2aWNlLnZpcnR1YWxfbmV0d29ya19uYW1lfX0iLAogICAgIlZJUlRVQUxfTkVUV09SS19QTFVHSU5fTEFCRUxTIjogInt7c2VydmljZS52aXJ0dWFsX25ldHdvcmtfcGx1Z2luX2xhYmVsc319IiwKICAgIHt7L3NlcnZpY2UudmlydHVhbF9uZXR3b3JrX2VuYWJsZWR9fQogICAgIk5PREVfQ1BVUyI6ICJ7e25vZGUuY3B1c319IiwKICAgICJOT0RFX01FTSI6ICJ7e25vZGUubWVtfX0iLAogICAgIk5PREVfRElTSyI6ICJ7e25vZGUuZGlza319IiwKICAgICJOT0RFX0RJU0tfVFlQRSI6ICJ7e25vZGUuZGlza190eXBlfX0iLAogICAgIk1PTkdPX1BPUlQiOiAie3tub2RlLnBvcnR9fSIsCgogICAgIkJBQ0tVUF9SRVNUT1JFX1MzX1JFR0lPTiI6ICJ7e2JhY2t1cC1yZXN0b3JlLnMzLnJlZ2lvbn19IiwKICAgICJCQUNLVVBfUkVTVE9SRV9TM19BQ0NFU1NfS0VZIjogInt7YmFja3VwLXJlc3RvcmUuczMuYWNjZXNzS2V5fX0iLAogICAgIkJBQ0tVUF9SRVNUT1JFX1MzX1NFQ1JFVF9LRVkiOiAie3tiYWNrdXAtcmVzdG9yZS5zMy5zZWNyZXRLZXl9fSIsCgogICAgIkJBQ0tVUF9DUFVTIjogInt7YmFja3VwLXJlc3RvcmUuYmFja3VwX2NwdXN9fSIsCiAgICAiQkFDS1VQX01FTSI6ICJ7e2JhY2t1cC1yZXN0b3JlLmJhY2t1cF9tZW19fSIsCiAgICAiQkFDS1VQX0hJRERFTl9TRUNPTkRBUllfQ1BVUyI6ICJ7e2JhY2t1cC1yZXN0b3JlLmhpZGRlblNlY29uZGFyeS5jcHVzfX0iLAogICAgIkJBQ0tVUF9ISURERU5fU0VDT05EQVJZX01FTSI6ICJ7e2JhY2t1cC1yZXN0b3JlLmhpZGRlblNlY29uZGFyeS5tZW19fSIsCiAgICAiQkFDS1VQX1VQTE9BRF9USFJFQURTIjogInt7YmFja3VwLXJlc3RvcmUuYmFja3VwLnVwbG9hZC50aHJlYWRzfX0iLAogICAgIkJBQ0tVUF9VUExPQURfUkVUUklFUyI6ICJ7e2JhY2t1cC1yZXN0b3JlLmJhY2t1cC51cGxvYWQucmV0cmllc319IiwKICAgICJCQUNLVVBfVVBMT0FEX1MzX0NIVU5LX1NJWkVfTUIiOiAie3tiYWNrdXAtcmVzdG9yZS5iYWNrdXAudXBsb2FkLnMzY2h1bmtTaXplTWJ9fSIsCiAgICAiQkFDS1VQX1VQTE9BRF9TM19CVUNLRVRfTkFNRSI6ICJ7e2JhY2t1cC1yZXN0b3JlLmJhY2t1cC51cGxvYWQuczNidWNrZXROYW1lfX0iLAogICAgIkJBQ0tVUF9VUExPQURfUzNfQlVDS0VUX1BSRUZJWCI6ICJ7e2JhY2t1cC1yZXN0b3JlLmJhY2t1cC51cGxvYWQuczNidWNrZXRQcmVmaXh9fSIsCiAgICAiQkFDS19ESVNLIjogInt7YmFja3VwLXJlc3RvcmUuZGlza319IiwKICAgICJCQUNLX0RJU0tfVFlQRSI6ICJ7e2JhY2t1cC1yZXN0b3JlLmRpc2tfdHlwZX19IiwKCiAgICAiUkVTVE9SRV9TM19VUkwiOiAie3tiYWNrdXAtcmVzdG9yZS5yZXN0b3JlLnMzVXJsfX0iLAogICAgIlJFU1RPUkVfQUZURVJfSU5JVCI6ICJ7e2JhY2t1cC1yZXN0b3JlLnJlc3RvcmUucmVzdG9yZUFmdGVySW5pdH19IiwKICAgICJSRVNUT1JFX0daSVBfRU5BQkxFRCI6ICJ7e2JhY2t1cC1yZXN0b3JlLnJlc3RvcmUuZ3ppcH19IiwKICAgICJSRVNUT1JFX09QTE9HX1JFUExBWSI6ICJ7e2JhY2t1cC1yZXN0b3JlLnJlc3RvcmUub3Bsb2dSZXBsYXl9fSIsCiAgICAiUkVTVE9SRV9EUk9QX0NPTExFQ1RJT05TIjogInt7YmFja3VwLXJlc3RvcmUucmVzdG9yZS5kcm9wQ29sbGVjdGlvbnN9fSIsCiAgICAiUkVTVE9SRV9OVU1fUEFSQUxMRUxfQ09MTEVDVElPTlMiOiAie3tiYWNrdXAtcmVzdG9yZS5yZXN0b3JlLm51bVBhcmFsbGVsQ29sbGVjdGlvbnN9fSIsCgogICAgIkpBVkFfVVJJIjogInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuanJlLXRhci1nen19IiwKICAgICJFWEVDVVRPUl9VUkkiOiAie3tyZXNvdXJjZS5hc3NldHMudXJpcy5leGVjdXRvci16aXB9fSIsCiAgICAiQk9PVFNUUkFQX1VSSSI6ICJ7e3Jlc291cmNlLmFzc2V0cy51cmlzLmJvb3RzdHJhcC16aXB9fSIsCiAgICAiTUNfVVJJIjogInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMubWMtdXJpfX0iLAogICAge3sjc2VydmljZS5zZXJ2aWNlX2FjY291bnRfc2VjcmV0fX0KICAgICJEQ09TX1NFUlZJQ0VfQUNDT1VOVF9DUkVERU5USUFMIjogeyAic2VjcmV0IjogInNlcnZpY2VDcmVkZW50aWFsIiB9LAogICAgIk1FU09TX01PRFVMRVMiOiAie1wibGlicmFyaWVzXCI6W3tcImZpbGVcIjpcImxpYm1lc29zLWJ1bmRsZVwvbGliXC9tZXNvc1wvbGliZGNvc19zZWN1cml0eS5zb1wiLFwibW9kdWxlc1wiOlt7XCJuYW1lXCI6IFwiY29tX21lc29zcGhlcmVfZGNvc19DbGFzc2ljUlBDQXV0aGVudGljYXRlZVwifSx7XCJuYW1lXCI6XCJjb21fbWVzb3NwaGVyZV9kY29zX2h0dHBfQXV0aGVudGljYXRlZVwiLFwicGFyYW1ldGVyc1wiOlt7XCJrZXlcIjpcImp3dF9leHBfdGltZW91dFwiLFwidmFsdWVcIjpcIjVtaW5zXCJ9LHtcImtleVwiOlwicHJlZW1wdGl2ZV9yZWZyZXNoX2R1cmF0aW9uXCIsXCJ2YWx1ZVwiOlwiMzBtaW5zXCJ9XX1dfV19IiwKICAgICJNRVNPU19BVVRIRU5USUNBVEVFIjogImNvbV9tZXNvc3BoZXJlX2Rjb3NfQ2xhc3NpY1JQQ0F1dGhlbnRpY2F0ZWUiLAogICAgIk1FU09TX0hUVFBfQVVUSEVOVElDQVRFRSI6ICJjb21fbWVzb3NwaGVyZV9kY29zX2h0dHBfQXV0aGVudGljYXRlZSIsCiAgICB7ey9zZXJ2aWNlLnNlcnZpY2VfYWNjb3VudF9zZWNyZXR9fQogICAgIkxJQk1FU09TX1VSSSI6ICJ7e3Jlc291cmNlLmFzc2V0cy51cmlzLmxpYm1lc29zLWJ1bmRsZS10YXItZ3p9fSIKICB9LAogICJ1cmlzIjogWwogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuYm9vdHN0cmFwLXppcH19IiwKICAgICJ7e3Jlc291cmNlLmFzc2V0cy51cmlzLmpyZS10YXItZ3p9fSIsCiAgICAie3tyZXNvdXJjZS5hc3NldHMudXJpcy5zY2hlZHVsZXItemlwfX0iLAogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMubGlibWVzb3MtYnVuZGxlLXRhci1nen19IgogIF0sCiAgInVwZ3JhZGVTdHJhdGVneSI6ewogICAgIm1pbmltdW1IZWFsdGhDYXBhY2l0eSI6IDAsCiAgICAibWF4aW11bU92ZXJDYXBhY2l0eSI6IDAKICB9LAogICJoZWFsdGhDaGVja3MiOiBbCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJNRVNPU19IVFRQIiwKICAgICAgInBhdGgiOiAiL3YxL2hlYWx0aCIsCiAgICAgICJncmFjZVBlcmlvZFNlY29uZHMiOiA5MDAsCiAgICAgICJpbnRlcnZhbFNlY29uZHMiOiAzMCwKICAgICAgInBvcnRJbmRleCI6IDAsCiAgICAgICJ0aW1lb3V0U2Vjb25kcyI6IDMwLAogICAgICAibWF4Q29uc2VjdXRpdmVGYWlsdXJlcyI6IDAKICAgIH0KICBdLAogICJwb3J0RGVmaW5pdGlvbnMiOiBbCiAgICB7CiAgICAgICJwb3J0IjogMjcwMTcsCiAgICAgICJwcm90b2NvbCI6ICJ0Y3AiLAogICAgICAibmFtZSI6ICJhcGkiLAogICAgICAibGFiZWxzIjogeyAiVklQXzAiOiAiL2FwaS57e3NlcnZpY2UubmFtZX19OiAyNzAxNyIgfQogICAgfQogIF0KfQo="
  },
  "resource": {
    "assets": {
      "container": {
        "docker": {
          "mongo-image": "mongo:4.0.12"
        }
      },
      "uris": {
        "jre-tar-gz": "https://downloads.mesosphere.com/java/openjdk-jre-8u212b03-hotspot-linux-x64.tar.gz",
        "libmesos-bundle-tar-gz": "https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.12.0.tar.gz",
        "bootstrap-zip": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.56.2/bootstrap.zip",
        "mc-uri": "https://dl.min.io/client/mc/release/linux-amd64/mc",
        "scheduler-zip": "https://hge-dcos.s3.amazonaws.com/autodelete7d/mongodb/20191216-043457-XDLHh2ASiubCt0CZ/operator-scheduler.zip"
      }
    },
    "images": {
      "icon-small": "https://downloads.mesosphere.com/assets/universe/000/mongodb-icon-small.png",
      "icon-medium": "https://downloads.mesosphere.com/assets/universe/000/mongodb-icon-medium.png",
      "icon-large": "https://downloads.mesosphere.com/assets/universe/000/mongodb-icon-large.png"
    },
    "cli": {
      "binaries": {
        "darwin": {
          "x86-64": {
            "contentHash": [
              {
                "algo": "sha256",
                "value": "f2631c44a42f750afd8024d395e37cab96a1e3ed77ed0b09ea9e825d959391ed"
              }
            ],
            "kind": "executable",
            "url": "https://hge-dcos.s3.amazonaws.com/autodelete7d/mongodb/20191216-043457-XDLHh2ASiubCt0CZ/dcos-service-cli-darwin"
          }
        },
        "linux": {
          "x86-64": {
            "contentHash": [
              {
                "algo": "sha256",
                "value": "d04181189c97306dce3f1d6afa7a549bb2860899a8cdc5f66c31ca5e4373232d"
              }
            ],
            "kind": "executable",
            "url": "https://hge-dcos.s3.amazonaws.com/autodelete7d/mongodb/20191216-043457-XDLHh2ASiubCt0CZ/dcos-service-cli-linux"
          }
        },
        "windows": {
          "x86-64": {
            "contentHash": [
              {
                "algo": "sha256",
                "value": "07d51f946355159c4fd20d7919e86a4e46613eb04a120671dc2af6237ff44560"
              }
            ],
            "kind": "executable",
            "url": "https://hge-dcos.s3.amazonaws.com/autodelete7d/mongodb/20191216-043457-XDLHh2ASiubCt0CZ/dcos-service-cli.exe"
          }
        }
      }
    }
  }
}

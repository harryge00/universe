{
  "packagingVersion": "3.0",
  "minDcosReleaseVersion": "1.10",
  "name": "edgelb-pool",
  "version": "v1.5.0",
  "maintainer": "support@mesosphere.io",
  "description": "EdgeLB Pool on DC/OS",
  "selected": true,
  "framework": true,
  "tags": [
    "edgelb-pool"
  ],
  "postInstallNotes": "DC/OS EdgeLB Pool is being installed!",
  "postUninstallNotes": "DC/OS EdgeLB Pool has been uninstalled.",
  "releaseVersion": 0,
  "config": {
    "type": "object",
    "properties": {
      "service": {
        "type": "object",
        "description": "DC/OS service configuration properties",
        "properties": {
          "name": {
            "description": "The name of the service instance",
            "type": "string"
          },
          "namespace": {
            "description": "The namespace for this service instance",
            "type": "string"
          },
          "mesosApiVersion": {
            "description": "Configures the Mesos API version to use. Possible values: V0 (non-HTTP), V1 (HTTP)",
            "type": "string",
            "enum": [
              "V0",
              "V1"
            ],
            "default": "V1"
          },
          "mesosAuthNZ": {
            "title": "Mesos authNZ control for the pool scheduler",
            "description": "Defines whether the pool schedulers should try to authorize with Mesos or not. Set to non-empty string by the apiserver in case when authNZ should be enabled",
            "type": "string",
            "default": ""
          },
          "healthcheckGracePeriod": {
            "title": "Pool tasks healthcheck grace period (in seconds)",
            "description": "Defines the period of time after start of the container when failed healthchecks will be ignored",
            "type": "string"
          },
          "healthcheckInterval": {
            "title": "Pool tasks healthcheck interval (in seconds)",
            "description": "Defines how often should the healthcheck be executed. At most one healthcheck is going to execute at any given time.",
            "type": "string"
          },
          "healthcheckMaxfail": {
            "title": "Pool tasks healthcheck maximum number of consecutive failures before declaring as unhealthy",
            "description": "Defines how many failures in a row mark the task as failed  and force Mesos to kill it",
            "type": "string"
          },
          "healthcheckCmdExecutionTimeout": {
            "title": "Maximum amount of time that the healthcheck command itself is allowed to execute",
            "description": "This is the amount of that that the actual healthcheck command is allowed to execute.",
            "type": "string"
          },
          "healthcheckTimeout": {
            "title": "Maximum amount of time that Mesos will wait for the healthcheck container to finish executing",
            "description": "This parameter should be bigger than healthcheckCheckTimeout as the execution time as seen by Mesos includes the container setup as well as the time spent by the healthcheck executing the test.",
            "type": "string"
          },
          "specFile": {
            "description": "The name of the service spec yaml file.",
            "type": "string",
            "default": "svc.yml"
          },
          "secretName": {
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string",
            "default": ""
          },
          "user": {
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root"
          },
          "principal": {
            "description": "The principal for the service instance.",
            "type": "string",
            "default": ""
          },
          "metricsPrefix": {
            "title": "The metrics prefix",
            "description": "The common prefix shared by all the metrics generated by Edge-LB",
            "type": "string",
            "default": "dcos"
          },
          "deploymentPath": {
            "title": "Edge-LB's base deployment path",
            "description": "The base deployment path to which Edge-LB has been deployed",
            "type": "string",
            "default": "/dcos-edgelb"
          }
        }
      },
      "edgelbPool": {
        "description": "Template pod configuration properties",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "count": {
            "title": "Node count",
            "description": "Number of Template pods to run",
            "type": "integer"
          },
          "placementConstraint": {
            "title": "Placement constraint",
            "description": "Marathon-style placement constraint for nodes. Public example: 'public_ip:CLUSTER:true,hostname:UNIQUE'",
            "type": "string"
          },
          "cpus": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number"
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer"
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "Template pod persistent disk requirements (in MB)",
            "type": "integer"
          },
          "ports": {
            "type": "string"
          },
          "autoCertEnabled": {
            "type": "string"
          },
          "secrets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                }
              }
            }
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "labels": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                }
              }
            }
          },
          "env": {
            "type": "array",
            "description": "Environment variables to pass through to the loadbalancer",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "description": "The name of the environment variable",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the environment variable",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "cpus",
          "mem",
          "disk",
          "count"
        ]
      },
      "variables": {
        "type": "object",
        "properties": {
          "secrets": {
            "type": "string",
            "default": "secrets"
          },
          "envfile": {
            "type": "string",
            "default": "envfile"
          }
        }
      }
    }
  },
  "marathon": {
    "v2AppMustacheTemplate": "ewoiaWQiOiAie3tzZXJ2aWNlLm5hbWV9fSIsCiJjcHVzIjogMS4wLAoibWVtIjogMjA0OCwKImluc3RhbmNlcyI6IDEsCiJjb25zdHJhaW50cyI6IFtbInB1YmxpY19pcCIsICJVTkxJS0UiLCAidHJ1ZSJdXSwKImNtZCI6ICJleHBvcnQgTERfTElCUkFSWV9QQVRIPSRNRVNPU19TQU5EQk9YL2xpYm1lc29zLWJ1bmRsZS9saWI6JExEX0xJQlJBUllfUEFUSDsgZXhwb3J0IE1FU09TX05BVElWRV9KQVZBX0xJQlJBUlk9JChscyAkTUVTT1NfU0FOREJPWC9saWJtZXNvcy1idW5kbGUvbGliL2xpYm1lc29zLSouc28pOyBleHBvcnQgSkFWQV9IT01FPSQobHMgLWQgJE1FU09TX1NBTkRCT1gvamRrKi8pOyBleHBvcnQgSkFWQV9IT01FPSR7SkFWQV9IT01FJS99OyBleHBvcnQgUEFUSD0kKGxzIC1kICRKQVZBX0hPTUUvYmluKTokUEFUSCAmJiBleHBvcnQgSkFWQV9PUFRTPVwiLVhtczI1Nk0gLVhteDUxMk0gLVhYOi1IZWFwRHVtcE9uT3V0T2ZNZW1vcnlFcnJvclwiICYmIC4vYm9vdHN0cmFwIC1yZXNvbHZlPWZhbHNlIC10ZW1wbGF0ZT1mYWxzZSAmJiAuL2VkZ2VsYi1wb29sLXNjaGVkdWxlci9iaW4vZWRnZWxiLXBvb2wgLi9lZGdlbGItcG9vbC1zY2hlZHVsZXIve3tzZXJ2aWNlLnNwZWNGaWxlfX0iLAoiY29udGFpbmVyIjogewoidHlwZSI6ICJNRVNPUyIKfSwKImxhYmVscyI6IHsKIkRDT1NfQ09NTU9OU19BUElfVkVSU0lPTiI6ICJ2MSIsCiJEQ09TX0NPTU1PTlNfVU5JTlNUQUxMIjogInRydWUiLAoiRENPU19QQUNLQUdFX0ZSQU1FV09SS19OQU1FIjogInt7c2VydmljZS5uYW1lfX0iLAoiTUFSQVRIT05fU0lOR0xFX0lOU1RBTkNFX0FQUCI6InRydWUiLAoiRENPU19TRVJWSUNFX05BTUUiOiAie3tzZXJ2aWNlLm5hbWV9fSIsCiJEQ09TX1NFUlZJQ0VfUE9SVF9JTkRFWCI6ICIwIiwKIkRDT1NfU0VSVklDRV9TQ0hFTUUiOiAiaHR0cCIKfSwKe3sjc2VydmljZS5zZWNyZXROYW1lfX0KICAgICJzZWNyZXRzIjogewogICAgInNlcnZpY2VDcmVkZW50aWFsIjogewogICAgInNvdXJjZSI6ICJ7e3NlcnZpY2Uuc2VjcmV0TmFtZX19IgogICAgfQogICAgfSwKe3svc2VydmljZS5zZWNyZXROYW1lfX0KImVudiI6IHsKICAgICJQQUNLQUdFX05BTUUiOiAiZWRnZWxiLXBvb2wiLAogICAgIlBBQ0tBR0VfVkVSU0lPTiI6ICJzdHViLXVuaXZlcnNlIiwKICAgICJQQUNLQUdFX0JVSUxEX1RJTUVfRVBPQ0hfTVMiOiAiMTU3MTE1MzAyNDQ0NCIsCiAgICAiUEFDS0FHRV9CVUlMRF9USU1FX1NUUiI6ICJUdWUgT2N0IDE1IDIwMTkgMTU6MjM6NDQgKzAwMDAiLAogICAgIk1FU09TX0FQSV9WRVJTSU9OIjogInt7c2VydmljZS5tZXNvc0FwaVZlcnNpb259fSIsCiAgICAiRlJBTUVXT1JLX05BTUUiOiAie3tzZXJ2aWNlLm5hbWV9fSIsCiAgICAiRlJBTUVXT1JLX1BSSU5DSVBBTCI6ICJ7e3NlcnZpY2UucHJpbmNpcGFsfX0iLAogICAgIkZSQU1FV09SS19VU0VSIjogInt7c2VydmljZS51c2VyfX0iLAogICAgIlBPT0xfUkVTRVJWRURfUk9MRSI6ICJ7e3tlZGdlbGJQb29sLnJvbGV9fX0iLAogICAgIlBPT0xfTkFNRSI6ICJ7e2VkZ2VsYlBvb2wubmFtZX19IiwKICAgICJQT09MX0NPTlNUUkFJTlRTIjogInt7e2VkZ2VsYlBvb2wucGxhY2VtZW50Q29uc3RyYWludHN9fX0iLAogICAgIlBPT0xfQ09VTlQiOiAie3tlZGdlbGJQb29sLmNvdW50fX0iLAogICAgIlBPT0xfQ1BVUyI6ICJ7e2VkZ2VsYlBvb2wuY3B1c319IiwKICAgICJQT09MX01FTSI6ICJ7e2VkZ2VsYlBvb2wubWVtfX0iLAogICAgIlBPT0xfRElTSyI6ICJ7e2VkZ2VsYlBvb2wuZGlza319IiwKICAgICJQT09MX1BPUlRTIjogInt7ZWRnZWxiUG9vbC5wb3J0c319IiwKICAgICJQT09MX0FVVE9DRVJUX0VOQUJMRUQiOiAie3tlZGdlbGJQb29sLmF1dG9DZXJ0RW5hYmxlZH19IiwKICAgICJQT09MX0lNQUdFIjogInt7cmVzb3VyY2UuYXNzZXRzLmNvbnRhaW5lci5kb2NrZXIuaW1hZ2V9fSIsCiAgICAiUE9PTF9SRUxBVElWRV9WT0xVTUVfUEFUSCI6ICJwZXJzaXN0ZW50IiwKICAgICJQT09MX1NFQ1JFVFNfUkVMQVRJVkVfUEFUSCI6ICJ7e3ZhcmlhYmxlcy5zZWNyZXRzfX0iLAogICAgIlBPT0xfRU5WRklMRV9SRUxBVElWRV9QQVRIIjogInt7dmFyaWFibGVzLmVudmZpbGV9fSIsCiAgICAiSkFWQV9VUkkiOiAie3tyZXNvdXJjZS5hc3NldHMudXJpcy5qcmUtdGFyLWd6fX0iLAogICAge3sjc2VydmljZS5zZWNyZXROYW1lfX0KICAgIHt7I3NlcnZpY2UubWVzb3NBdXRoTlp9fQogICAgIkRDT1NfU0VDUkVUX05BTUUiOiAie3tzZXJ2aWNlLnNlY3JldE5hbWV9fSIsCiAgICAiRENPU19TRVJWSUNFX0FDQ09VTlRfQ1JFREVOVElBTCI6IHsgInNlY3JldCI6ICJzZXJ2aWNlQ3JlZGVudGlhbCIgfSwKICAgICJNRVNPU19NT0RVTEVTIjogIntcImxpYnJhcmllc1wiOlt7XCJmaWxlXCI6XCJsaWJtZXNvcy1idW5kbGVcL2xpYlwvbWVzb3NcL2xpYmRjb3Nfc2VjdXJpdHkuc29cIixcIm1vZHVsZXNcIjpbe1wibmFtZVwiOiBcImNvbV9tZXNvc3BoZXJlX2Rjb3NfQ2xhc3NpY1JQQ0F1dGhlbnRpY2F0ZWVcIn0se1wibmFtZVwiOlwiY29tX21lc29zcGhlcmVfZGNvc19odHRwX0F1dGhlbnRpY2F0ZWVcIixcInBhcmFtZXRlcnNcIjpbe1wia2V5XCI6XCJqd3RfZXhwX3RpbWVvdXRcIixcInZhbHVlXCI6XCI1bWluc1wifSx7XCJrZXlcIjpcInByZWVtcHRpdmVfcmVmcmVzaF9kdXJhdGlvblwiLFwidmFsdWVcIjpcIjMwbWluc1wifV19XX1dfSIsCiAgICAiTUVTT1NfQVVUSEVOVElDQVRFRSI6ICJjb21fbWVzb3NwaGVyZV9kY29zX0NsYXNzaWNSUENBdXRoZW50aWNhdGVlIiwKICAgICJNRVNPU19IVFRQX0FVVEhFTlRJQ0FURUUiOiAiY29tX21lc29zcGhlcmVfZGNvc19odHRwX0F1dGhlbnRpY2F0ZWUiLAogICAge3svc2VydmljZS5tZXNvc0F1dGhOWn19CiAgICB7ey9zZXJ2aWNlLnNlY3JldE5hbWV9fQogICAge3sjZWRnZWxiUG9vbC5lbnZ9fQogICAgIlRBU0tDRkdfQUxMX3t7a2V5fX0iOiAie3t2YWx1ZX19IiwKICAgIHt7L2VkZ2VsYlBvb2wuZW52fX0KICAgIHt7I2VkZ2VsYlBvb2wuc2VjcmV0c319CiAgICAiUEFSU0VTRUNSRVRfU0VDUkVUe3tpbmRleH19IjogInt7c2VjcmV0fX0iLAogICAgIlBBUlNFU0VDUkVUX0ZJTEV7e2luZGV4fX0iOiAie3t2YXJpYWJsZXMuc2VjcmV0c319L3t7ZmlsZX19IiwKICAgIHt7L2VkZ2VsYlBvb2wuc2VjcmV0c319CiAgICB7eyNlZGdlbGJQb29sLm5ldHdvcmtzfX0KICAgICJQQVJTRU5FVFdPUktfTkFNRXt7aW5kZXh9fSI6ICJ7e25hbWV9fSIsCiAgICAiUEFSU0VORVRXT1JLX0xBQkVMU3t7aW5kZXh9fSI6ICJ7e2xhYmVsc319IiwKICAgIHt7L2VkZ2VsYlBvb2wubmV0d29ya3N9fQogICAgIkxJQk1FU09TX1VSSSI6ICJ7e3Jlc291cmNlLmFzc2V0cy51cmlzLmxpYm1lc29zLWJ1bmRsZS10YXItZ3p9fSIsCiAgICAiQ09OVEFJTkVSX0xPR0dFUl9MT0dST1RBVEVfTUFYX1NURE9VVF9TSVpFIjogIjI1TUIiLAogICAgIkNPTlRBSU5FUl9MT0dHRVJfTE9HUk9UQVRFX01BWF9TVERFUlJfU0laRSI6ICIyNU1CIiwKICAgICJDT05UQUlORVJfTE9HR0VSX0xPR1JPVEFURV9TVERPVVRfT1BUSU9OUyI6ICJyb3RhdGUgNCIsCiAgICAiQ09OVEFJTkVSX0xPR0dFUl9MT0dST1RBVEVfU1RERVJSX09QVElPTlMiOiAicm90YXRlIDQiLAogICAgIlBPT0xfSEVBTFRIQ0hFQ0tfR1JBQ0VfUEVSSU9EIjogInt7ZWRnZWxiUG9vbC5oZWFsdGhjaGVja0dyYWNlUGVyaW9kfX0iLAogICAgIlBPT0xfSEVBTFRIQ0hFQ0tfSU5URVJWQUwiOiAie3tlZGdlbGJQb29sLmhlYWx0aGNoZWNrSW50ZXJ2YWx9fSIsCiAgICAiUE9PTF9IRUFMVEhDSEVDS19NQVhGQUlMIjogInt7ZWRnZWxiUG9vbC5oZWFsdGhjaGVja01heGZhaWx9fSIsCiAgICAiUE9PTF9IRUFMVEhDSEVDS19USU1FT1VUIjogInt7ZWRnZWxiUG9vbC5oZWFsdGhjaGVja1RpbWVvdXR9fSIsCiAgICAiUE9PTF9IRUFMVEhDSEVDS19DTURfRVhFQ1VUSU9OX1RJTUVPVVQiOiAie3tlZGdlbGJQb29sLmhlYWx0aGNoZWNrQ21kRXhlY3V0aW9uVGltZW91dH19IiwKICAgICJNRVRSSUNTX1BSRUZJWCI6ICJ7e3NlcnZpY2UubWV0cmljc1ByZWZpeH19IiwKICAgICJERVBMT1lNRU5UX1BBVEgiOiAie3tzZXJ2aWNlLmRlcGxveW1lbnRQYXRofX0iLAogICAgIkFMTE9XX1JFR0lPTl9BV0FSRU5FU1MiOiAidHJ1ZSIKICB9LAogICJ1cmlzIjogWwogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuanJlLXRhci1nen19IiwKICAgICJ7e3Jlc291cmNlLmFzc2V0cy51cmlzLnNjaGVkdWxlci16aXB9fSIsCiAgICAie3tyZXNvdXJjZS5hc3NldHMudXJpcy5saWJtZXNvcy1idW5kbGUtdGFyLWd6fX0iLAogICAgInt7cmVzb3VyY2UuYXNzZXRzLnVyaXMuYm9vdHN0cmFwLXppcH19IgogIF0sCiAgInVwZ3JhZGVTdHJhdGVneSI6ewogICAgIm1pbmltdW1IZWFsdGhDYXBhY2l0eSI6IDAsCiAgICAibWF4aW11bU92ZXJDYXBhY2l0eSI6IDAKICB9LAogICJoZWFsdGhDaGVja3MiOiBbCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJNRVNPU19IVFRQIiwKICAgICAgInBhdGgiOiAiL3YxL2hlYWx0aCIsCiAgICAgICJncmFjZVBlcmlvZFNlY29uZHMiOiA5MDAsCiAgICAgICJpbnRlcnZhbFNlY29uZHMiOiAzMCwKICAgICAgInBvcnRJbmRleCI6IDAsCiAgICAgICJ0aW1lb3V0U2Vjb25kcyI6IDMwLAogICAgICAibWF4Q29uc2VjdXRpdmVGYWlsdXJlcyI6IDAKICAgIH0KICAgIF0sCiAgInBvcnREZWZpbml0aW9ucyI6IFsKICAgIHsKICAgICAgInBvcnQiOiAwLAogICAgICAicHJvdG9jb2wiOiAidGNwIiwKICAgICAgIm5hbWUiOiAiYXBpIiwKICAgICAgImxhYmVscyI6IHsgIlZJUF8wIjogIi9hcGkue3tzZXJ2aWNlLm5hbWV9fTo4MCIgfQogICAgfQogIF0KfQo="
  },
  "resource": {
    "assets": {
      "container": {
        "docker": {
          "image": "mesosphere/dhap:v1.5.0"
        }
      },
      "uris": {
        "jre-tar-gz": "https://downloads.mesosphere.com/java/openjdk-jre-8u212b03-hotspot-linux-x64.tar.gz",
        "libmesos-bundle-tar-gz": "https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.14-beta.tar.gz",
        "scheduler-zip": "https://downloads.mesosphere.com/edgelb-pool/v1.5.0/assets/edgelb-pool-scheduler.zip",
        "bootstrap-zip": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.57.0/bootstrap.zip"
      }
    },
    "images": {
      "icon-small": "https://github.com/dcos/dcos-ui/blob/master/plugins/services/src/img/icon-service-default-small.png?raw=true",
      "icon-medium": "https://github.com/dcos/dcos-ui/blob/master/plugins/services/src/img/icon-service-default-medium.png?raw=true",
      "icon-large": "https://github.com/dcos/dcos-ui/blob/master/plugins/services/src/img/icon-service-default-large.png?raw=true"
    },
    "cli": {
      "binaries": {
        "darwin": {
          "x86-64": {
            "contentHash": [
              {
                "algo": "sha256",
                "value": "c329d60aa5fea372115c371814a141f6615819db51935bd09a8265c8978115ac"
              }
            ],
            "kind": "executable",
            "url": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.57.0/dcos-service-cli-darwin"
          }
        },
        "linux": {
          "x86-64": {
            "contentHash": [
              {
                "algo": "sha256",
                "value": "9690330cd5d7017ab7d747e31b28d30f817cf35cb8db700a5ceebaf628d0d299"
              }
            ],
            "kind": "executable",
            "url": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.57.0/dcos-service-cli-linux"
          }
        },
        "windows": {
          "x86-64": {
            "contentHash": [
              {
                "algo": "sha256",
                "value": "75a6d593848f18b6fc5050f7dde18fb91c659b5b62825ba0eca0e8a5286d46bf"
              }
            ],
            "kind": "executable",
            "url": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.57.0/dcos-service-cli.exe"
          }
        }
      }
    }
  }
}
